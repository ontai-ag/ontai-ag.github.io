import{c as n}from"./index-BidpMcxo.js";/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const s=n("BellOff",[["path",{d:"M8.7 3A6 6 0 0 1 18 8a21.3 21.3 0 0 0 .6 5",key:"o7mx20"}],["path",{d:"M17 17H3s3-2 3-9a4.67 4.67 0 0 1 .3-1.7",key:"16f1lm"}],["path",{d:"M10.3 21a1.94 1.94 0 0 0 3.4 0",key:"qgo35s"}],["path",{d:"m2 2 20 20",key:"1ooewy"}]]);/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const c=n("Clipboard",[["rect",{width:"8",height:"4",x:"8",y:"2",rx:"1",ry:"1",key:"tgr4d6"}],["path",{d:"M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2",key:"116196"}]]);/**
 * @license lucide-react v0.462.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const i=n("Slack",[["rect",{width:"3",height:"8",x:"13",y:"2",rx:"1.5",key:"diqz80"}],["path",{d:"M19 8.5V10h1.5A1.5 1.5 0 1 0 19 8.5",key:"183iwg"}],["rect",{width:"3",height:"8",x:"8",y:"14",rx:"1.5",key:"hqg7r1"}],["path",{d:"M5 15.5V14H3.5A1.5 1.5 0 1 0 5 15.5",key:"76g71w"}],["rect",{width:"8",height:"3",x:"14",y:"13",rx:"1.5",key:"1kmz0a"}],["path",{d:"M15.5 19H14v1.5a1.5 1.5 0 1 0 1.5-1.5",key:"jc4sz0"}],["rect",{width:"8",height:"3",x:"2",y:"8",rx:"1.5",key:"1omvl4"}],["path",{d:"M8.5 5H10V3.5A1.5 1.5 0 1 0 8.5 5",key:"16f3cl"}]]),a={convertToTask:e=>e},l={async createTask(e){try{const r={id:`mock_task_${Date.now()}`,user_id:e.userId,agent_id:e.agentId,prompt:e.prompt,additional_info:e.additionalInfo||null,attachment_url:e.attachmentUrl||null,status:"pending",result:null,price:e.price,payment_status:"completed",notification_channel:e.notificationChannel,output_format:e.outputFormat,revision_count:0,max_revisions:e.maxRevisions,feedback:null,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},t=a.convertToTask(r);return console.warn("[SUPABASE_REMOVAL] Task processing not started for task:",t.id),t}catch(r){return console.error("Error creating task:",r),null}},async getTaskById(e,r){try{return console.warn("[SUPABASE_REMOVAL] Returning null for getTaskById, Supabase removed."),null}catch(t){return console.error("Error fetching task:",t),null}},async getUserTasks(e,r){try{return console.warn("[SUPABASE_REMOVAL] Returning empty array for getUserTasks, Supabase removed."),[]}catch(t){return console.error("Error fetching user tasks:",t),[]}},async updateNotificationChannel(e,r){try{return console.warn("[SUPABASE_REMOVAL] Returning false for updateNotificationChannel, Supabase removed."),!1}catch(t){return console.error("Error updating notification channel:",t),!1}},async startTaskProcessing(e){try{return console.warn("[SUPABASE_REMOVAL] Returning false for startTaskProcessing, Supabase removed."),!1}catch(r){return console.error("Error starting task processing:",r),!1}},subscribeToTaskUpdates(e,r){return console.warn("[SUPABASE_REMOVAL] Subscription to task updates is disabled, Supabase removed."),()=>{console.warn("[SUPABASE_REMOVAL] Unsubscribe called on disabled subscription.")}},async cancelTask(e){try{return console.warn("[SUPABASE_REMOVAL] Returning false for cancelTask, Supabase removed."),!1}catch(r){return console.error("Error cancelling task:",r),!1}},async requestRevision(e,r){try{return console.warn("[SUPABASE_REMOVAL] Returning false for requestRevision, Supabase removed."),!1}catch(t){return console.error("Error requesting revision:",t),!1}},async getTaskRevisions(e){try{return console.warn("[SUPABASE_REMOVAL] Returning empty array for getTaskRevisions, Supabase removed."),[]}catch(r){return console.error("Error fetching task revisions:",r),[]}},async updateOutputFormat(e,r){try{return console.warn("[SUPABASE_REMOVAL] Returning false for updateOutputFormat, Supabase removed."),!1}catch(t){return console.error("Error updating output format:",t),!1}finally{}}};a&&!a.convertToTaskRevision&&(a.convertToTaskRevision=e=>({...e,id:String(e.id)}));export{s as B,c as C,i as S,l as t};
